name: Main

on:
  push:
    branches:
      - main

concurrency: main

jobs:
  tag:
    name: Tag Release
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - id: version
        run: |
          VERSION=`npm version patch --no-git-tag-version`
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ env.VERSION }} [skip ci]
          tagging_message: ${{ env.VERSION }}

  publish-framework:
    name: Publish Framework
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.tag.outputs.VERSION }}
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      - name: PreCache
        run: cat package-lock.json | jq '.version = "0.0.0"' | jq '.packages."".version = "0.0.0"' > package-lock-copy.json
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock-copy.json') }}
      - name: PostCache
        run: rm package-lock-copy.json
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Publish Framework
        run: |
          npm run build:framework
          cp -f LICENSE.md publish
          cp -f framework/README.md publish/README.md
          cd publish
          VERSION=`cat ../package.json | jq -r '.version'` && cat ../framework/package.json | jq --arg version $VERSION '. +{version: $version}' > package.json
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker:
    name: Docker
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.tag.outputs.VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Setup Docker QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Docker Push
        uses: docker/build-push-action@v3
        with:
          # platforms: linux/amd64,linux/arm64 - Quay does not seem to support this :(
          tags: quay.io/ansible/ansible-ui:latest,quay.io/ansible/ansible-ui:${{ needs.tag.outputs.VERSION }}
          labels: version=${{ needs.tag.outputs.VERSION }}
          build-args: VERSION=${{ needs.tag.outputs.VERSION }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
